{"version":3,"sources":["atoms.tsx","components/CreateCategory.tsx","components/CategoriesList.tsx","components/CreateToDo.tsx","components/ToDo.tsx","components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["persistAtom","recoilPersist","categoriesState","atom","key","default","effects_UNSTABLE","categoryState","toDoState","toDoSelector","selector","get","toDos","category","filter","toDo","CreateCategory","setCategories","useSetRecoilState","useForm","register","handleSubmit","setValue","onSubmit","oldCategories","required","placeholder","CategoriesList","categories","useRecoilValue","map","onClick","e","console","log","it","deleteCategory","CreateToDo","setToDos","oldToDos","text","id","Date","now","ToDo","event","name","currentTarget","targetIndex","findIndex","newToDo","slice","categoryIt","ToDoList","useRecoilState","setCategory","value","onInput","categoryOne","GlobalStyle","createGlobalStyle","props","theme","bgColor","textColor","App","ReactDOM","render","StrictMode","accentColor","cardBgColor","document","getElementById"],"mappings":"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","file":"static/js/main.fbe4d396.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\nimport { recoilPersist } from \"recoil-persist\";\n\nconst { persistAtom } = recoilPersist();\nexport interface IToDo {\n  text: string;\n  id: number;\n  category: string;\n}\n\nexport interface ICategory {\n  text: string;\n}\n\nexport const categoriesState = atom<string[]>({\n  key: \"categories\",\n  default: [\"TO_DO\", \"DOING\", \"DONE\"],\n  effects_UNSTABLE: [persistAtom],\n});\n\nexport const categoryState = atom<string>({\n  key: \"category\",\n  default: \"TO_DO\",\n});\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: [],\n  effects_UNSTABLE: [persistAtom],\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos === null\n      ? []\n      : toDos.filter((toDo) => toDo.category === category);\n  },\n});\n","import { useForm } from \"react-hook-form\";\nimport { useSetRecoilState } from \"recoil\";\nimport { categoriesState } from \"../atoms\";\n\ninterface IForm {\n  category: string;\n}\n\nfunction CreateCategory() {\n  const setCategories = useSetRecoilState(categoriesState);\n\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = ({ category }: IForm) => {\n    setCategories((oldCategories) => [category, ...oldCategories]);\n    setValue(\"category\", \"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit(handleValid)}>\n      <input\n        {...register(\"category\", {\n          required: \"Please add a category\",\n        })}\n        placeholder=\"Add a Category\"\n      />\n      <button>Add Category</button>\n    </form>\n  );\n}\n\nexport default CreateCategory;\n","import React from \"react\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { categoriesState } from \"../atoms\";\nimport CreateCategory from \"./CreateCategory\";\n\nfunction CategoriesList() {\n  const categories = useRecoilValue(categoriesState);\n\n  const setCategories = useSetRecoilState(categoriesState);\n\n  const deleteCategory = (\n    category: string,\n    e: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    setCategories((oldCategories) => {\n      console.log(oldCategories);\n      return [...oldCategories.filter((it) => it !== category)];\n    });\n  };\n\n  return (\n    <div>\n      Categories List\n      <hr />\n      <CreateCategory />\n      {categories.map((category) => (\n        <div>\n          {category}\n          <button\n            onClick={(e) => {\n              deleteCategory(category, e);\n            }}\n          >\n            ❌\n          </button>\n        </div>\n      ))}\n      <hr />\n    </div>\n  );\n}\nexport default CategoriesList;\n","import { useForm } from \"react-hook-form\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { categoryState, toDoState } from \"../atoms\";\n\ninterface IForm {\n  toDo: string;\n}\n\nfunction CreateToDo() {\n  const setToDos = useSetRecoilState(toDoState);\n  const category = useRecoilValue(categoryState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = ({ toDo }: IForm) => {\n    setToDos((oldToDos) => [\n      { text: toDo, id: Date.now(), category },\n      ...oldToDos,\n    ]);\n    setValue(\"toDo\", \"\");\n  };\n  return (\n    <form onSubmit={handleSubmit(handleValid)}>\n      <input\n        {...register(\"toDo\", {\n          required: \"Please write a To Do\",\n        })}\n        placeholder=\"Write a to do\"\n      />\n      <button>Add Todo</button>\n    </form>\n  );\n}\n\nexport default CreateToDo;\n","import React from \"react\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { IToDo, toDoState, categoriesState } from \"../atoms\";\n\nfunction ToDo({ text, category, id }: IToDo) {\n  const setToDos = useSetRecoilState(toDoState);\n  const categories = useRecoilValue(categoriesState);\n\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\n      const newToDo = { text, id, category: name as any };\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        newToDo,\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n\n  const deleteTodo = () => {\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n\n  return (\n    <li>\n      <span>{text}</span>\n      {categories.map((categoryIt) =>\n        categoryIt === category ? null : (\n          <button name={categoryIt} onClick={onClick}>\n            {categoryIt}\n          </button>\n        )\n      )}\n\n      <button onClick={deleteTodo}>❌</button>\n    </li>\n  );\n}\n\nexport default ToDo;\n","import React from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { categoriesState, categoryState, toDoSelector } from \"../atoms\";\nimport CategoriesList from \"./CategoriesList\";\nimport CreateToDo from \"./CreateToDo\";\nimport ToDo from \"./ToDo\";\n\nfunction ToDoList() {\n  const toDos = useRecoilValue(toDoSelector);\n  const categories = useRecoilValue(categoriesState);\n  const [category, setCategory] = useRecoilState(categoryState);\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n    setCategory(event.currentTarget.value as any);\n  };\n\n  return (\n    <div>\n      <CategoriesList />\n      <h1>To Dos</h1>\n      <hr />\n      <select value={category} onInput={onInput}>\n        {categories.map((categoryOne) => (\n          <option value={categoryOne}>{categoryOne}</option>\n        ))}\n        ;\n      </select>\n      <CreateToDo />\n      {toDos?.map((toDo) => (\n        <ToDo key={toDo.id} {...toDo} />\n      ))}\n    </div>\n  );\n}\n\nexport default ToDoList;\n","import { createGlobalStyle } from \"styled-components\";\nimport ToDoList from \"./components/ToDoList\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ToDoList />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"transparent\",\n};\n"],"sourceRoot":""}